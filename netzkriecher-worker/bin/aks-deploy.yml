trigger:
  - main

resources:
  - repo: self

parameters:
  - name: stage
    displayName: 'Stage'
    type: string
    default: 'prod'
    values:
      - dev
      - int
      - prod

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '91b896a7-3a5e-4d7d-8bb7-db463f59b01c'
  imageRepository: 'worker'
  containerRegistry: 'netzkriecheracr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildNumber)'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:

        - task: Docker@2
          displayName: Build and push an image to container registry
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
              $(tag)

        - publish: manifests
          artifact: manifests
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
     - deployment: Deploy
       displayName: Deploy
       pool:
         vmImage: $(vmImageName)
       environment: 'netzkriecher'
       strategy:
         runOnce:
           deploy:
             steps:
              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster

                inputs:
                  action: 'deploy'
                  kubernetesServiceConnection: 'k8s-${{ parameters.stage }}'
                  namespace: 'netzkriecher'
                  manifests: '$(Pipeline.Workspace)/manifests/netzkriecher-worker-deployment.yaml'
                  containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                  rolloutStatusTimeout: '300'