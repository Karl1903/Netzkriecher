trigger:
  - none
  
parameters:
  - name: tfAction
    displayName: 'Terraform action'
    type: string
    default: 'plan'
    values:
      - apply
      - destroy
      - plan

  - name: stage
    displayName: 'Stage'
    type: string
    default: 'dev'
    values:
      - dev
      - int
      - prod

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: netzkriecher

steps:

- task: Bash@3
  displayName: 'Run Terraform'
  inputs:
    targetType: 'inline'
    script: |
      set -e
      
      if [[ $TF_ACTION != "plan" ]];then
        TF_OPTIONS="--auto-approve"
      fi
    
      docker run \
        -v "$(pwd)"/:/workspace \
        -w /workspace \
        hashicorp/terraform:latest \
            init \
                -backend-config="key=${TF_VAR_stage}_netzkriecher.tfstate" \
                -backend-config="access_key=$(STATE_BLOBACCESSKEY)" \
                -backend-config=storage_account_name="netzkriecheriac"
    
      docker run \
        -e ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID) \
        -e ARM_CLIENT_ID=$(ARM_CLIENT_ID) \
        -e ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET) \
        -e ARM_TENANT_ID=$(ARM_TENANT_ID) \
        -e STATE_BLOBACCESSKEY=$(STATE_BLOBACCESSKEY) \
        -e TF_VAR_stage=$TF_VAR_stage \
        -v "$(pwd)"/:/workspace \
        -w /workspace \
        hashicorp/terraform:latest \
            $TF_ACTION \
            $TF_OPTIONS
    workingDirectory: 'components'
  env:
    TF_ACTION: ${{ parameters.tfAction }}
    TF_VAR_stage: ${{ parameters.stage }}
